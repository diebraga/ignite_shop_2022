import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { HomeContainer, HomeProduct } from "../styles/pages/home";
import { useKeenSlider } from "keen-slider/react";
import { stripe } from "../lib/stripe";
import Stripe from "stripe";

import "keen-slider/keen-slider.min.css";
import Link from "next/link";
import { FilledBag } from "../../public/svg/FilledBag";

export type ProductType = {
  id: string;
  name: string;
  imageUrl: string;
  price: number | null;
  rawPrice: number;
  key?: number;
};

type HomeProps = {
  products: ProductType[];
};

const Home: NextPage<HomeProps> = ({ products }) => {
  const [sliderRef] = useKeenSlider({
    slides: {
      perView: 3,
      spacing: 48,
    },
  });
  return (
    <>
      <Head>
        <title>Home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <HomeContainer ref={sliderRef} className="keen-slider">
        {products.map((product) => {
          return (
            <Link
              href={`/product/${product.id}`}
              key={product.id}
              prefetch={false}
            >
              <HomeProduct className="keen-slider__slide">
                <Image src={product.imageUrl} width={520} height={480} alt="" />

                <footer>
                  <div
                    style={{
                      display: "flex",
                      flexDirection: "column",
                    }}
                  >
                    <strong>{product.name}</strong>
                    <span
                      style={{
                        marginTop: 5,
                      }}
                    >
                      {product.price}
                    </span>
                  </div>
                  <>
                    <FilledBag />
                  </>
                </footer>
              </HomeProduct>
            </Link>
          );
        })}
      </HomeContainer>
    </>
  );
};

export default Home;

export const getServerSideProps: GetServerSideProps = async () => {
  const response = await stripe.products.list({
    expand: ["data.default_price"],
  });

  const products = response.data.map((product) => {
    const price = product.default_price as Stripe.Price;
    return {
      id: product.id,
      name: product.name,
      imageUrl: product.images[0],
      price: new Intl.NumberFormat("en-GB", {
        style: "currency",
        currency: "EUR",
      }).format((price.unit_amount as number) / 100),
    };
  });
  return {
    props: {
      products,
    },
  };
};
